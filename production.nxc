const short wheelradius=28; //wheel radius, in mm
const short wheelbase=267; // distance between drive wheels, in mm.

const short motorMin=16; // the minimum amount of power to a motor to make it spin

const float thetaProportion=wheelradius/wheelbase;


// !!!!!!!!!!!  Unless intentionally resetting motor counters, use motorEX commands with flag RESET_NONE


mutex moveMutex;
float posX = 0;
float posY = 0;
int posT = 0;

int goalT=90;
int speed=100;


task driveTask() {
   while (true) {
    //  if (posT!=goalT) {
          int deltaT=(goalT-posT);
          if (deltaT>180) {
            deltaT-=360;
          }
          deltaT;
          int speedL=(speed-deltaT);
          int speedR=(speed+deltaT);
          
          if (speedL<0) {
            speedL=((100-motorMin)/100)*speedL-motorMin;
          } else if(speedL>0) {
            speedL=((100-motorMin)/100)*speedL+motorMin;
          }

          if (speedR<0) {
            speedR=((100-motorMin)/100)*speedR-motorMin;
          } else if(speedR>0) {
            speedR=((100-motorMin)/100)*speedR+motorMin;
          }
          
          int maxSpeed=100;
          if(abs(speedR)>100) {
               maxSpeed=abs(speedR);
          } else if(abs(speedL)>100) {
               maxSpeed=abs(speedL);
          }

          speedL*=100;
          speedL/=maxSpeed;
          speedR*=100;
          speedR/=maxSpeed;

          NumOut(1, LCD_LINE1, deltaT);
          NumOut(1, LCD_LINE2, speedL);
          NumOut(1, LCD_LINE3, speedR);

          
          OnFwdEx(OUT_C, speedR, RESET_NONE);
          OnFwdEx(OUT_B, speedL, RESET_NONE);
      //  } else {
      //    OnFwdEx(OUT_BC,speed,RESET_NONE);
      //  }
          


    //NumOut(1, LCD_LINE1, maxSpeed);
    

    Wait(10);
    
    ClearScreen();
  }
}


task positionTask() {
  while (true) {


    posT=(MotorBlockTachoCount(OUT_C)-MotorBlockTachoCount(OUT_B))*thetaProportion;
    posT%=360;
    posT+=360;
    posT%=360;



    Wait(20);
  }
}


task main() {
     SetSensorUltrasonic(S1);        // set up ultrasonic sensor S1
     //set up ??? sensor S2
     //set up light sensor S3
     //set up color sensor S4
  
  Precedes(driveTask,positionTask);
}
