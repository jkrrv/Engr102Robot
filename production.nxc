const short wheelradius=28; //wheel radius, in mm
const short wheelbase=267; // distance between drive wheels, in mm.

const float thetaProportion=wheelradius/wheelbase;


// !!!!!!!!!!!  Unless intentionally resetting motor counters, all


mutex moveMutex;
float posX = 0;
float posY = 0;
float posT = 0;


task sweepingTask() {
OnFwdEx(OUT_C, 50, RESET_NONE);
  while (posT!=90) {
    if(posT<90){
       OnFwdEx(OUT_C, 50, RESET_NONE);
    } else {
       OnFwdEx(OUT_C, -50, RESET_NONE);
    }
    Wait(20);
  }
  OffEx(OUT_ABC, RESET_NONE);
}


task positionTask() {
  while (true) {
    ClearScreen();

    posT=(MotorBlockTachoCount(OUT_C)-MotorBlockTachoCount(OUT_B))*thetaProportion;
    posT%=360;
    NumOut(1, LCD_LINE1, posT);

    Wait(100);
  }
}


task main() {
     SetSensorUltrasonic(S1);        // set up ultrasonic sensor S1
     //set up ??? sensor S2
     //set up light sensor S3
     //set up color sensor S4
  
  Precedes(sweepingTask,positionTask);
}
